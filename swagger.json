{
  "swagger": "2.0",
  "info": {
    "title": "ScamNet Intelligence API",
    "description": "https://scamnet.app/api",
    "version": "1.0.0"
  },
  "host": "asia-southeast1-scamnet-160501.cloudfunctions.net",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
        "/evaluate_email": {
      "get": {
        "summary": "Evaluate Email",
        "description": "Checks if given email address is in a data breach and returns a detailed response about the breach status",
        "parameters": [
          {
            "name": "X-Api-Key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "client",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Email evaluated successfully",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/evaluate_phone_number": {
      "get": {
        "summary": "Evaluate Phone Number",
        "description": "Checks if given phone number is in ScamNet's whitelist/graylist/blacklist",
        "parameters": [
          {
            "name": "X-Api-Key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "client",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Phone number evaluated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "location": {
                  "type": "string"
                },
                "carrier": {
                  "type": "string"
                },
                "line_type": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "num_reports": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/report_phone_number": {
      "post": {
        "summary": "Report Phone Number",
        "description": "Allows your users to report to ScamNet's managed & centralised database",
        "parameters": [
          {
            "name": "X-Api-Key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "client",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Phone number reported successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/evaluate_website": {
      "get": {
        "summary": "Evaluate Website",
        "description": "Checks for scam indicators in the given website using our state of the art scam detection engine (Rule + ML Based)",
        "parameters": [
          {
            "name": "X-Api-Key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "client",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "host",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Website evaluated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "category": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}